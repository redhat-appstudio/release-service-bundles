---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-push-artifacts-to-cdn-results
spec:
  description: |
    Run the push-artifacts task with and verify the proper file names are reported as task results
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      taskSpec:
        steps:
          - name: setup
            image: quay.io/konflux-ci/release-service-utils:6a7ca9ba0ddd70404fe2267551409925cf513132
            script: |
              #!/usr/bin/env bash
              set -eux

              mkdir "$(workspaces.data.path)/results"
              cat > "$(workspaces.data.path)/snapshot_spec.json" << EOF
              {
                "application": "nvidia-aws-disk-image-1-3",
                "artifacts": {},
                "components": [
                  {
                    "containerImage": "quay.io/redhat-user-workloads/rhel-ai-tenant/nvidia-aws-disk-image-1-3/nvidia-aws-disk-image-1-3@sha256:c866ff5e773045580c3f3025610c82c653685db9914712ed2713dfea8ec13e05",
                    "name": "nvidia-aws-disk-image-1-3",
                    "source": {
                      "git": {
                        "revision": "534fa8a78f4587ccca254eec71eab26677f29090",
                        "url": "https://gitlab.com/redhat/rhel-ai/artifacts/nvidia-aws"
                      }
                    },
                    "contentGateway": {
                      "filePrefix": "rhel-ai-nvidia-aws-1.3",
                      "productCode": "RHELAI",
                      "productName": "Binary_RL_Red Hat Enterprise Linux AI",
                      "productVersionName": "1.3-staging"
                    },
                    "staged": {
                      "destination": "rhelai-1_DOT_3-for-rhel-9-x86_64-isos",
                      "files": [
                        {
                          "filename": "rhel-ai-nvidia-aws-1.3-1732915588-x86_64.ami",
                          "source": "disk.raw"
                        }
                      ],
                      "version": "1.3"
                    }
                  }
                ]
              }
              EOF

              cat > "$(workspaces.data.path)/data.json" << EOF
              {
                "contentGateway": {
                  "productName": "Konflux test product",
                  "productCode": "KTestProduct",
                  "productVersionName": "KTestProduct 1",
                  "components": [
                    {
                      "name": "test-component",
                      "description": "Red Hat OpenShift Local Sandbox Test",
                      "label": "Checksum File Sandbox Test"
                    }
                  ]
                },
                "cdn": {
                  "env": "stage"
                }
              }
              EOF

              cat > "$(workspaces.data.path)/release_plan_admission.json" << EOF
              {
                "spec": {
                  "pipeline": {
                    "pipelineRef": {
                      "resolver": "git",
                      "params": [
                        {
                          "name": "url",
                          "value": "https://localhost.git"
                        },
                        {
                          "name": "revision",
                          "value": "main"
                        },
                        {
                          "name": "pathInRepo",
                          "value": "pipelines/abc/abc.yaml"
                        }
                      ]
                    },
                    "serviceAccountName": "release-service-account"
                  }
                }
              }
              EOF
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: run-task
      taskRef:
        name: push-artifacts-to-cdn
      params:
        - name: snapshotPath
          value: "snapshot_spec.json"
        - name: dataPath
          value: "data.json"
        - name: releasePlanAdmissionPath
          value: release_plan_admission.json
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: resultsDirPath
          value: results
        - name: taskGitUrl
          value: "http://localhost"
        - name: taskGitRevision
          value: "main"
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - run-task
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:6a7ca9ba0ddd70404fe2267551409925cf513132
            script: |
              #!/usr/bin/env bash
              set -ex

              results=$(cat "$(workspaces.data.path)/results/push-artifacts-results.json")

              # Check the results file
              expected="rhel-ai-nvidia-aws-1.3-1732915588-x86_64.ami"
              if [ "$(jq -r '."artifacts"[]' <<< "$results")" != "$expected" ]; then
                echo "push-artifacts results do not contain expected file names"
                exit 1
              fi
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:6a7ca9ba0ddd70404fe2267551409925cf513132
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete internalrequests --all
