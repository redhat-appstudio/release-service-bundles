---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-marketplacesvm-push-disk-images-pre-push
spec:
  description: |
    Run the marketplacesvm-push-disk-images task in pre-push mode and ensure it succeeds
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      taskSpec:
        steps:
          - name: setup
            image: quay.io/konflux-ci/release-service-utils:6556e8a6b031c1aad4f0472703fd121a6e1cd45d
            script: |
              #!/usr/bin/env bash
              set -eux

              cat > "$(workspaces.data.path)/snapshot_spec.json" << EOF
              {
                "application": "amd-bootc-1-3-raw-disk-image",
                "artifacts": {},
                "components": [
                  {
                    "containerImage": "quay.io/workload/tenant/test-product/amd-bootc-1-3-raw-disk-image@sha256:123456",
                    "name": "amd-bootc-1-3-raw-disk-image",
                    "source": {
                      "git": {
                        "revision": "1abbfcdbc1c5e8b7aba07673297237ed192b50e2",
                        "url": "https://gitlab.com/konflux/test-product/disk-images/amd-bootc"
                      }
                    },
                    "staged": {
                      "destination": "test-product-1_DOT_3-x86_64-isos",
                      "files": [
                        {
                          "filename": "test-product-amd-1.3-1732045201-x86_64.raw",
                          "source": "disk.raw"
                        }
                      ],
                      "version": "1.3"
                    },
                    "productInfo": {
                      "filePrefix": "test-product-amd-1.3",
                      "productCode": "TESTPRDOCUT",
                      "productName": "Test Product",
                      "productVersionName": "1.3"
                    },
                    "starmap": [
                      {
                        "cloud": "aws",
                        "mappings": {
                          "aws-emea": {
                            "destinations": [
                              {
                                "architecture": "x86_64",
                                "destination": "00000000-0000-0000-0000-000000000000",
                                "overwrite": false,
                                "restrict_version": true
                              }
                            ],
                            "provider": null
                          },
                          "aws-na": {
                            "destinations": [
                              {
                                "architecture": "x86_64",
                                "destination": "ffffffff-ffff-ffff-ffff-ffffffffffff",
                                "overwrite": false,
                                "restrict_version": true
                              }
                            ],
                            "provider": null
                          }
                        },
                        "name": "test-product",
                        "workflow": "stratosphere"
                      }
                    ]
                  }
                ]
              }
              EOF

      workspaces:
        - name: data
          workspace: tests-workspace

    - name: run-task
      taskRef:
        name: marketplacesvm-push-disk-images
      params:
        - name: snapshotPath
          value: "snapshot_spec.json"
        - name: cloudMarketplacesSecret
          value: marketplacesvm-test-secret
        - name: prePush
          value: true
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace

    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - run-task
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:6556e8a6b031c1aad4f0472703fd121a6e1cd45d
            script: |
              #!/usr/bin/env bash
              set -eux

              # Single component fixture: Expected "prepare_component" to be called once
              expected_pullspec="quay.io/workload/tenant/test-product/amd-bootc-1-3-raw-disk-image@sha256:123456"
              if [[ $(wc -l < "$(workspaces.data.path)/mock_select-oci-auth.txt") != 1 ]]; then
                  echo "Error: select-oci-auth was expected to be called a 1 time. Actual calls:"
                  cat "$(workspaces.data.path)/mock_select-oci-auth.txt"
                  exit 1
              elif [[ $(<"$(workspaces.data.path)/mock_select-oci-auth.txt") != "$expected_pullspec" ]]; then
                  echo "Error: select-oci-auth was expected to be called with $expected_pullspec. Actual: "
                  cat "$(workspaces.data.path)/mock_select-oci-auth.txt"
                  exit 1
              fi
              if [[ $(wc -l < "$(workspaces.data.path)/mock_oras.txt") != 1 ]]; then
                  echo "Error: oras was expected to be called a 1 time. Actual calls:"
                  cat "$(workspaces.data.path)/mock_oras.txt"
                  exit 1
              elif [[ $(<"$(workspaces.data.path)/mock_oras.txt") != *"$expected_pullspec" ]]; then
                  echo "Error: oras was expected to be called pullspec $expected_pullspec. Actual: "
                  cat "$(workspaces.data.path)/mock_oras.txt"
                  exit 1
              fi

              if [[ $(wc -l < "$(workspaces.data.path)/mock_wrapper.txt") != 1 ]]; then
                  echo "Error: wrapper was expected to be called a 1 time. Actual calls:"
                  cat "$(workspaces.data.path)/mock_wrapper.txt"
                  exit 1
              elif [[ $(<"$(workspaces.data.path)/mock_wrapper.txt") != *"--nochannel"* ]]; then
                  echo "Error: wrapper was expected to be called with '--nochannel'. Actual call:"
                  cat "$(workspaces.data.path)/mock_wrapper.txt"
                  exit 1
              fi
